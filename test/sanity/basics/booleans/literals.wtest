describe "booleans - tests with literals" {

  test "true literal used in an assert" {
    assert.that(true)
  }

  test "false literal used in an assert" {
    assert.notThat(false)
  }

  test "obtaining true from a closure" {
    assert.that({{true}.apply()}.apply())
  }

  test "obtaining false from a closure" {
    assert.notThat({{false}.apply()}.apply())
  }

  test "null" {
    assert.equals(null, null)
  }

  test "negate literal" {
    assert.that(!false)
    assert.that(not false)

    assert.notThat(!true)
    assert.notThat(not true)
  }

  test "and operator used with const assigned to literals true and false" {
    const aTrue = true
    const aFalse = false
    assert.that(aTrue && aTrue)
    assert.that(aTrue and aTrue)

    assert.notThat(aTrue && aFalse)
    assert.notThat(aTrue and aFalse)

    assert.notThat(aFalse && aTrue)
    assert.notThat(aFalse and aTrue)

    assert.notThat(aFalse && aFalse)
    assert.notThat(aFalse and aFalse)
  }

  test "or operator used with const assigned to literals true and false" {
    const aTrue = true
    const aFalse = false
    assert.that(aTrue || aTrue)
    assert.that(aTrue or aTrue)

    assert.that(aTrue || aFalse)
    assert.that(aTrue or aFalse)

    assert.that(aFalse || aTrue)
    assert.that(aFalse or aTrue)

    assert.notThat(aFalse || aFalse)
    assert.notThat(aFalse or aFalse)
  }

  test "using and operator with closures" {
    assert.that({{true}.apply()}.apply() && {{true}.apply()}.apply())

    assert.notThat({{true}.apply()}.apply() && {{false}.apply()}.apply())
    assert.notThat({{false}.apply()}.apply() && {{true}.apply()}.apply())
    assert.notThat({{false}.apply()}.apply() && {{false}.apply()}.apply())
  }

  test "or with literals" {
    assert.that({true}.apply() || {true}.apply())
    assert.that({true}.apply() || {false}.apply())
    assert.that({false}.apply() || {true}.apply())
    assert.notThat({false}.apply() || {false}.apply())
  }

}
